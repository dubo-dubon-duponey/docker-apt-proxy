{
#	{$debug}
	https_port {$PORT}
	default_sni {$DOMAIN}
	admin off
	storage file_system {
		root "/certs"
	}
	auto_https disable_redirects
}

# Healthcheck
{$HEALTHCHECK_URL} {
  respond 200 {
    body {}
    close
  }
}

https://{$DOMAIN} http://127.0.0.1:10043 {
  tls {$TLS} {
  }

  log {
    output stdout
    format json
    level {$LOG_LEVEL}
  }

  # https://securityheaders.com/
  header {
    X-Xss-Protection "1; mode=block"

    # clickjacking protection
    X-Frame-Options DENY

    # disable clients from sniffing the media type
    X-Content-Type-Options nosniff

    # keep referrer data off of HTTP connections
    # Referrer-Policy no-referrer-when-downgrade
    # Referrer-Policy "same-origin"
    Referrer-Policy "strict-origin-when-cross-origin"

    # enable HSTS
    Strict-Transport-Security max-age=31536000; includeSubDomains; preload

    # CSP
    Content-Security-Policy "default-src 'self';"

    # Signature
    Server "DuboDubonDuponey/1.0 (Caddy/2)"
  }

  file_server /ca {
    root /certs/pki/authorities/local/root.crt
  }

  @proxy {
    header Proxy-Authorization Basic*
  }

  @noproxy {
    not {
      header Proxy-Authorization Basic*
    }
  }

  request_header @proxy Authorization {http.request.header.Proxy-Authorization}
  request_header @proxy -Proxy-Authorization

  reverse_proxy @proxy http://127.0.0.1:10043

  basicauth @noproxy bcrypt "{$REALM}" {
    {$USERNAME} {$PASSWORD} {$SALT}
  }

  reverse_proxy @noproxy http://127.0.0.1:3142 {
    # active health checking
    # XXX health does not seem to work /archive?healthcheck=internal
    health_path     /
    health_port     3142
    health_interval 60s
    health_timeout  5s
    health_status   200
    health_status   404
  }
}
